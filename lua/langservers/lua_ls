-- https://www.reddit.com/r/neovim/comments/x3bd4i/comment/impp74r/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button 
local f = require 'hiphish.util.functional'
-- See https://gist.github.com/folke/fe5d28423ea5380929c3f7ce674c41d8

-- Directory prefix of all package directories
local package_prefix = vim.fn.expand((vim.env.XDG_DATA_HOME or '~/.local/share') ..  '/nvim/site/')

-- Predicate which is only true for paths that belong to a package and have Lua
-- modules.
local function is_package_path(path)
	if package_prefix ~= string.sub(path, 1, #package_prefix) then
		return false
	end
	return vim.fn.isdirectory(path .. '/lua') ~= 0
end

-- https://github.com/sumneko/vscode-lua/blob/master/setting/schema.json
local M = {
	cmd = {"lua-language-server"},
	Lua = {
		runtime = {
			version = jit and 'LuaJIT' or _VERSION,
			-- When using `require`, how to find the file based on the input
			-- name.Setting this config to `?/init.lua` means that when you enter
			-- `require 'myfile'`, `${workspace}/myfile/init.lua` will be searched from
			-- the loaded files. if `runtime.pathStrict` is `false`,
			-- `${workspace}/**/myfile/init.lua` will also be searched. If you want to
			-- load files outside the workspace, you need to set `Lua.workspace.library`
			-- first.
			path = {
				'lua/?.lua',
				'lua/?/init.lua',
			},
			-- When enabled, `runtime.path` will only search the first level of
			-- directories, see the description of `runtime.path`.
			pathStrict = true,
		},
		diagnostics = {
			globals = {
				'vim',
			},
		},
		workspace = {
			-- In addition to the current workspace, which directories will
			-- load files from. The files in these directories will be treated
			-- as externally provided code libraries, and some features (such
			-- as renaming fields) will not modify these files.
			-- library = library
			library = f.filter(is_package_path, vim.api.nvim_get_runtime_file('', true))
			-- Very important: do not include the '/lua' subdirectory in the
			-- above paths! The runtime.path entry taks care of that.
		},
	}
}

if jit then
	local globals = M.Lua.diagnostics.globals
	globals[#globals + 1] = 'jit'
end

return M